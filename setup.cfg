# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = G-Frame
description = [Grama/Google] Digital Photo Frame
author = Troy D Black troydblack@gmail.com
license = mit
url = https://github.com/troy-black/G-Frame
long-description = file: README.rst
platforms = any
# Add here all kinds of additional classifiers as defined under

# https://pypi.python.org/pypi?%3Aaction=list_classifiers

classifiers =

    Development Status :: 4 - Beta

    Framework :: Flask

    Programming Language :: Python


[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =gFrame
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires = pyscaffold>=3.1a0,<3.2a0
# Add here dependencies of your project (semicolon/line-separated), e.g.

# install_requires = numpy; scipy

cachetools==3.1.0
certifi==2018.11.29
chardet==3.0.4
Click==7.0
Flask==1.0.2
google-api-python-client==1.7.8
google-auth==1.6.2
google-auth-httplib2==0.0.3
google-auth-oauthlib==0.2.0
httplib2==0.12.1
idna==2.8
itsdangerous==1.1.0
Jinja2==2.10
json-logging==0.0.11
MarkupSafe==1.1.0
oauthlib==3.0.1
pyasn1==0.4.5
pyasn1-modules==0.2.4
requests==2.21.0
requests-oauthlib==1.2.0
rsa==4.0
six==1.12.0
uritemplate==3.0.0
urllib3==1.24.1
Werkzeug==0.14.1


# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
# python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*

# [options.packages.find]
# where = gFrame
# exclude =
#     tests

# [options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install G-Frame[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
# testing =
#     pytest
#     pytest-cov

# [options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = gframe.module:function
# For example:
# console_scripts =
#     fibonacci = gframe.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

# [test]
# py.test options when running `python setup.py test`
# addopts = --verbose
# extras = True

# [tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# addopts =
#     --cov gframe --cov-report term-missing
#     --verbose
# norecursedirs =
#     dist
#     build
#     .tox
# testpaths = tests

# [aliases]
# build = bdist_wheel
# release = build upload

# [bdist_wheel]
# Use this option if your package is pure-python
# universal = 1

# [build_sphinx]
# source_dir = docs
# build_dir = docs/_build

# [devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
# no-vcs = 1
# formats = bdist_wheel

# [flake8]
# Some sane defaults for the code style checker flake8
# exclude =
#     .tox
#     build
#     dist
#     .eggs
#     docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.1

package = gframe

